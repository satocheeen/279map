enum ParentOfContent {
    Item
    Content
}
input ParentInput {
    type: ParentOfContent!
    id: DataIdInput!
}
input ContentsDatasourceInput {
    datasourceId: String!
    name: String!   # 名前はユーザ側で指定可能
}

# --------------
# connect
# --------------
type ConnectInfo {
    sid: String!
    authLv: Auth!
    userId: String
    userName: String
}
type ConnectResult {
    mapDefine: MapDefine!
    connect: ConnectInfo!
}

# --------------
# swutchMapKind
# --------------
type MapInfo {
    extent: [Float!]!
    itemDataSourceGroups: [DatasourceGroup!]!
    contentDataSources: [DatasourceInfo!]!
    originalIcons: [IconDefine!]!
}
type DatasourceGroup {
    name: String
    visible: Boolean!
    datasources: [DatasourceInfo!]!
}

type IconDefine {
    id: ID!
    caption: String
    imagePath: String!
    useMaps: [MapKind!]!
}

# ------------------------------
input UpdateItemInput {
    id: DataIdInput!
    name: String
    geometry: Geometry
    geoProperties: GeoProperties
}

type Mutation {
    connect (
        mapId: String!
    ): ConnectResult!

    disconnect: Boolean

    switchMapKind (
        mapKind: MapKind!
    ): MapInfo!

    registItem (
        datasourceId: String!
        name: String
        geometry: Geometry!
        geoProperties: GeoProperties!
    ): Boolean
    
    updateItem (
        targets: [UpdateItemInput!]!
    ): Boolean

    removeItem (
        id: DataIdInput!
    ): Boolean

    registContent (
        parent: ParentInput!
        datasourceId: String!

        title: String!
        overview: String
        categories: [String!]
        type: ContentType!
        date: String
        imageUrl: String
        url: String
    ): Boolean

    updateContent (
        id: DataIdInput!
        title: String
        overview: String
        categories: [String!]
        type: ContentType!
        date: String
        imageUrl: String
        url: String
    ): Boolean

    linkContent (
        id: DataIdInput!
        parent: ParentInput!
    ): Boolean

    unlinkContent (
        id: DataIdInput!
        parent: ParentInput!
    ): Boolean

    removeContent (
        id: DataIdInput!
    ): Boolean

    changeAuthLevel (
        userId: ID!
        authLv: Auth!
    ): Boolean

    request (
        mapId: String!
        name: String!
    ): Boolean

    linkContentsDatasource (
        contentsDatasources: [ContentsDatasourceInput!]!
    ): Boolean

    unlinkContentsDatasource (
        contentsDatasourceIds: [String!]!
    ): Boolean

}
