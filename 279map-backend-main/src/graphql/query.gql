scalar DataId
scalar Geometry
scalar JSON

enum ItemTemporaryState {
    Registing
    Updateing
}
type ItemDefine {
    id: DataId!
    name: String!
    geoJson: Geometry!
    geoProperties: JSON!
    lastEditedTime: String!
    temporary: ItemTemporaryState
    hasContents: Boolean!
    hasImageContentId: [DataId!]!  # 画像を持つコンテンツID一覧
}

type CategoryDefine {
    name: String!
    color: String!
    datasourceIds: [String!]!
}
type EventDefine {
    datasourceId: String
    dates: [String!]!
}
enum ContentType {
    normal
    sns
}
enum Auth {
    None
    Request
    View
    Edit
    Admin
}
type ContentsDefine {
    id: DataId!
    itemId: DataId!
    date: String
    url: String
    title: String!
    overview: String
    category: [String!]
    image: Boolean!
    videoUrl: String
    parentId: DataId
    children: [ContentsDefine!]
    usingAnotherMap: Boolean!
    anotherMapItemId: DataId
    isSnsContent: Boolean!
    isEditable: Boolean!
    isDeletable: Boolean!
}
type UnpointContent {
    id: DataId!
    title: String!
    thumb: String
    overview: String
}
type GetUnpointContentsResult {
    contents: [UnpointContent!]!
    nextToken: String
}
# getThumbで返す画像サイズ
enum ThumbSize {
    Thumbnail
    Medium
}
type User {
    id: ID!
    name: String!
    authLv: Auth!
}
type ContentsDatasource {
    datasourceId: String!
    name: String!
}

# --------------
# search関連
# --------------
input Condition {
    category: [String!]
    date: [String!]
    keyword: [String!]
}

type SearchHitItem {
    id: DataId!
    hitContents: [DataId!]!  # 当該アイテム配下の検索条件に合致するコンテンツID一覧 TODO: 孫コンテンツも含める
}
# --------------

type Query {
    # lastestEditedTime: 指定されている場合、この更新日時以降に更新されたアイテムのみ返す
    # excludeItemIds: 指定されている場合、このidのアイテムは結果から除く TODO: deprecated
    getItems(wkt: String!, zoom: Float!, datasourceId: String!, latestEditedTime: String, excludeItemIds: [String!]): [ItemDefine!]!

    getItemsById(targets: [DataId!]!): [ItemDefine!]!

    getCategory(datasourceIds: [String!]): [CategoryDefine!]!
    getEvent(datasourceIds: [String!]): [EventDefine!]!
    getContent(id: DataId!): ContentsDefine!
    getContents(ids: [DataId!]!): [ContentsDefine!]!
    getContentsInItem(itemId: DataId!): [ContentsDefine!]!
    getUnpointContents(datasourceId: String!, nextToken: String): GetUnpointContentsResult!

    getThumb(contentId: DataId!, size: ThumbSize): String!
    getImageUrl(contentId: DataId!): String!

    # datasourceIds => 指定されている場合、指定のデータソースのみ検索対象にする
    search(condition: Condition!, datasourceIds: [String!]): [SearchHitItem!]!

    getUserList: [User!]!
    getLinkableContentsDatasources: [ContentsDatasource!]!
}
