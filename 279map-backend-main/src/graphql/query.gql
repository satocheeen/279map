scalar DataId

type ItemDefine {
    id: DataId!
    name: String!
    lastEditedTime: String!
}
type CategoryDefine {
    name: String!
    color: String!
    datasourceIds: [String!]!
}
type EventDefine {
    datasourceId: String
    dates: [String!]!
}
enum ContentType {
    normal
    sns
}
enum Auth {
    None
    Request
    View
    Edit
    Admin
}
type ContentsDefine {
    id: DataId!
    itemId: DataId!
    date: String
    url: String
    title: String!
    overview: String
    category: [String!]
    image: Boolean!
    videoUrl: String
    parentId: DataId
    children: [ContentsDefine!]
    usingAnotherMap: Boolean!
    anotherMapItemId: DataId
    isSnsContent: Boolean!
    isEditable: Boolean!
    isDeletable: Boolean!
}
type UnpointContent {
    id: DataId!
    title: String!
    thumb: String
    overview: String
}
type GetUnpointContentsResult {
    contents: [UnpointContent!]!
    nextToken: String
}
type User {
    id: ID!
    name: String!
    authLv: Auth!
}
type ContentsDatasource {
    datasourceId: String!
    name: String!
}
type Query {
    getItems(wkt: String!, zoom: Float!, datasourceId: String!, latestEditedTime: String, excludeItemIds: [String!]): [ItemDefine]
    getCategory(datasourceIds: [String!]): [CategoryDefine!]!
    getEvent(datasourceIds: [String!]): [EventDefine!]!
    getContent(id: DataId!): ContentsDefine!
    getContents(ids: [DataId!]!): [ContentsDefine!]!
    getContentsInItem(itemId: DataId!): [ContentsDefine!]!
    getUnpointContents(datasourceId: String!, nextToken: String): GetUnpointContentsResult!

    getUserList: [User!]!
    getLinkableContentsDatasources: [ContentsDatasource!]!
}
