scalar DataId

type ItemDefine {
    id: DataId!
    name: String!
    lastEditedTime: String!
}
type CategoryDefine {
    name: String!
    color: String!
    dataSourceIds: [String!]!
}
type EventDefine {
    dataSourceId: String
    dates: [String!]!
}
enum ContentType {
    normal
    sns
}
type ContentsDefine {
    id: DataId!
    itemId: DataId!
    date: String
    url: String
    title: String!
    overview: String
    category: [String!]
    image: Boolean!
    videoUrl: String
    parentId: DataId
    children: [ContentsDefine!]
    usingAnotherMap: Boolean!
    anotherMapItemId: DataId
    isSnsContent: Boolean!
    isEditable: Boolean!
    isDeletable: Boolean!
}
type UnpointContent {
    id: DataId!
    title: String!
    thumb: String
    overview: String
}
type GetUnpointContentsResult {
    contents: [UnpointContent!]!
    nextToken: String
}
type Query {
    getItems(wkt: String!, zoom: Float!, dataSourceId: String!, latestEditedTime: String, excludeItemIds: [String!]): [ItemDefine]
    getCategory(dataSourceIds: [String!]): [CategoryDefine!]!
    getEvent(dataSourceIds: [String!]): [EventDefine!]!
    getContent(id: DataId!): ContentsDefine!
    getContents(ids: [DataId!]!): [ContentsDefine!]!
    getContentsInItem(itemId: DataId!): [ContentsDefine!]!
    getUnpointContents(dataSourceId: String!, nextToken: String): GetUnpointContentsResult!
}
