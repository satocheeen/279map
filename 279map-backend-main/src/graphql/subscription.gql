type Target {
    "対象のデータID"
    id: DataId!
    "対象のデータソースID"
    datasourceId: String!
    "アイテム情報を持つデータの場合、true"
    hasItem: Boolean!
    "コンテンツ情報を持つデータの場合、true"
    hasContent: Boolean!
    "アイテムを持つ場合、地図範囲。update時は更新後範囲"
    wkt: String
}
enum ErrorType {
    "アイテム登録に失敗した場合"
    RegistItemFailed
}

type ErrorInfo {
    "エラー種別"
    type: ErrorType!
    "エラー詳細"
    description: String
    "特定のアイテムに紐づくエラーの場合、アイテムID"
    itemId: DataId
}

enum Operation {
    Update
    Delete
}

type Subscription {
    """
    指定の地図上にデータが追加された場合に通知する
    """
    dataInsertInTheMap (
        "対象の地図ID"
        mapId: String!
        "対象の地図種別"
        mapKind: MapKind!
    ): [Target!]!

    """
    指定の地図上のデータが更新された場合に通知する
    """
    dataUpdateInTheMap (
        "対象の地図ID"
        mapId: String!
        "対象の地図種別"
        mapKind: MapKind!
    ): [Target!]!

    """
    指定の地図上のデータが削除された場合に通知する
    """
    dataDeleteInTheMap (
        "対象の地図ID"
        mapId: String!
        "対象の地図種別"
        mapKind: MapKind!
    ): [DataId!]!


    """
    指定のデータが更新/削除された場合に通知する
    """
    dataUpdate (
        "対象のデータID"
        id: DataId!
    ): Operation!

    """
    ユーザ権限に更新があった場合
    """
    updateUserAuth (
        "対象ユーザ"
        userId: ID!
        "対象の地図ID"
        mapId: String!
    ): Boolean

    """
    ユーザ一覧情報が更新された場合
    """
    userListUpdate (
        "対象の地図ID"
        mapId: String!
    ): Boolean

    """
    地図定義に変更があった場合
    """
    mapInfoUpdate (
        "対象の地図ID"
        mapId: String!
    ): Boolean

    """
    ユーザが操作している地図でエラーが発生した場合にエラー内容を通知する。
    突き放し実行している登録、更新処理でエラー発生した場合に通知するために用意。
    """
    error (
        "対象セッションID"
        sid: String!
    ): ErrorInfo!
}
