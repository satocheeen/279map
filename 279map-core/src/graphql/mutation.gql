fragment datasourceInfo on DatasourceInfo {
    datasourceId
    name
    visible
    kind
    config {
        ... on ItemConfig {
            kind
            layerGroup
            editable
            deletable
        }
        ... on RealPointContentConfig {
            kind
            defaultIcon
            linkableContents
            layerGroup
            editable
            deletable
        }

        ... on ContentConfig {
            kind
            linkableChildContents
            disableUnlinkMap
            editable
            deletable
        }

    }
}
mutation switchMapKind (
    $mapKind: MapKind!
) {
    switchMapKind (
        mapKind: $mapKind
    ) {
        extent
        itemDataSourceGroups {
            name
            visible
            datasources {
                ...datasourceInfo
            }
        }
        contentDataSources {
            ...datasourceInfo
        }
    }
}

mutation removeItem (
    $id: DataId!
) {
    removeItem(
        id: $id
    )
}

mutation registContent (
    $parent: ParentInput!
    $datasourceId: String!

    $title: String!
    $overview: String
    $categories: [String!]
    $type: ContentType!
    $date: String
    $imageUrl: String
    $url: String
) {
    registContent(
        parent: $parent
        datasourceId: $datasourceId
        title: $title
        overview: $overview
        categories: $categories
        type: $type
        date: $date
        imageUrl: $imageUrl
        url: $url
    )
}

mutation updateContent (
    $id: DataId!
    $title: String
    $overview: String
    $categories: [String!]
    $type: ContentType!
    $date: String
    $imageUrl: String
    $url: String
) {
    updateContent(
        id: $id
        title: $title
        overview: $overview
        categories: $categories
        type: $type
        date: $date
        imageUrl: $imageUrl
        url: $url
    )
}

mutation linkContent (
    $id: DataId!
    $parent: ParentInput!
) {
    linkContent (
        id: $id
        parent: $parent
    )
}

mutation unlinkContent (
    $id: DataId!
    $parent: ParentInput!
) {
    unlinkContent (
        id: $id
        parent: $parent
    )
}

mutation removeContent (
    $id: DataId!
) {
    removeContent (
        id: $id
    )
}

mutation changeAuthLevel (
    $userId: ID!
    $authLv: Auth!
) {
    changeAuthLevel(
        userId: $userId
        authLv: $authLv
    )
}

mutation linkContentsDatasource (
    $contentsDatasources: [ContentsDatasourceInput!]!
) {
    linkContentsDatasource (
        contentsDatasources: $contentsDatasources,
    )
}

mutation unlinkContentsDatasource (
    $contentsDatasourceIds: [String!]!
) {
    unlinkContentsDatasource (
        contentsDatasourceIds: $contentsDatasourceIds,
    )
}
